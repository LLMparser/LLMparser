[{"instruction":"Parse the input log to log template.","input":"onExtend:1514040781000 0 0 0","output":"onExtend:<*> <*> <*> <*>"},{"instruction":"Parse the input log to log template.","input":"onStandStepChanged 3786","output":"onStandStepChanged <*>"},{"instruction":"Parse the input log to log template.","input":" getTodayTotalDetailSteps = 1514038440000##7019##548365##8661##13406##27180468","output":"getTodayTotalDetailSteps = <*>##<*>##<*>##<*>##<*>##<*>"},{"instruction":"Parse the input log to log template.","input":"setTodayTotalDetailSteps=1514038440000##7048##548365##8661##15971##27198970","output":"setTodayTotalDetailSteps=<*>"},{"instruction":"Parse the input log to log template.","input":"calculateAltitudeWithCache totalAltitude=0","output":"calculateAltitudeWithCache totalAltitude=<*>"},{"instruction":"Parse the input log to log template.","input":"calculateCaloriesWithCache totalCalories=128510","output":"calculateCaloriesWithCache totalCalories=<*>"},{"instruction":"Parse the input log to log template.","input":"processHandleBroadcastAction action:android.intent.action.TIME_TICK","output":"processHandleBroadcastAction action:android.intent.action.TIME_TICK"},{"instruction":"Parse the input log to log template.","input":"REPORT : 7028 5017 150539 240","output":"REPORT : <*> <*> <*> <*>"},{"instruction":"Parse the input log to log template.","input":"flush sensor data","output":"flush sensor data"},{"instruction":"Parse the input log to log template.","input":"onReceive action: android.intent.action.SCREEN_OFF","output":"onReceive action: android.intent.action.SCREEN_OFF"},{"instruction":"Parse the input log to log template.","input":"onReceive action: android.intent.action.SCREEN_ON","output":"onReceive action: android.intent.action.SCREEN_ON"},{"instruction":"Parse the input log to log template.","input":"new date =20171223, type=40021,135245.88,old=131454.53999999995","output":"new date =<*>, type=<*>,<*>,old=<*>"},{"instruction":"Parse the input log to log template.","input":"processHandleBroadcastAction action:android.intent.action.SCREEN_ON","output":"processHandleBroadcastAction action:android.intent.action.SCREEN_ON"},{"instruction":"Parse the input log to log template.","input":"getBinderPackageName packageName = com.huawei.health","output":"getBinderPackageName packageName = com.huawei.health"},{"instruction":"Parse the input log to log template.","input":"getTodaySportData mStepsRecordManager=com.huawei.health.g.c@8a2a501","output":"getTodaySportData mStepsRecordManager=<*>"},{"instruction":"Parse the input log to log template.","input":"timeStamp back,extendReportTimeStamp=1514039575000","output":"timeStamp back,extendReportTimeStamp=<*>"},{"instruction":"Parse the input log to log template.","input":"initUserPrivacy the userPrivacy is true","output":"initUserPrivacy the userPrivacy is <*>"},{"instruction":"Parse the input log to log template.","input":"ifCanSync not! no cloud version","output":"ifCanSync not! no cloud version"},{"instruction":"Parse the input log to log template.","input":"sendSyncFailedBroadcast","output":"sendSyncFailedBroadcast"},{"instruction":"Parse the input log to log template.","input":"initDataPrivacy the dataPrivacy switch is open, start push health data!","output":"initDataPrivacy the dataPrivacy switch is open, start push health data!"},{"instruction":"Parse the input log to log template.","input":"upLoadOneMinuteDataToEngine time=25233975,0,93,0,20002","output":"upLoadOneMinuteDataToEngine time=<*>,<*>,<*>,<*>,<*>"},{"instruction":"Parse the input log to log template.","input":"needAutoSync autoSyncSwitch is open","output":"needAutoSync autoSyncSwitch is open"},{"instruction":"Parse the input log to log template.","input":"initDataPrivacy the dataPrivacy is true","output":"initDataPrivacy the dataPrivacy is <*>"},{"instruction":"Parse the input log to log template.","input":"startSync hiSyncOption = HiSyncOption{syncAction=2, syncMethod=2, syncScope=0, syncDataType=20000, syncModel=2, pushAction=0},app = 1 who = 1","output":"startSync hiSyncOption = HiSyncOption{syncAction=<*>, syncMethod=<*>, syncScope=<*>, syncDataType=<*>, syncModel=<*>, pushAction=<*>},app = <*> who = <*>"},{"instruction":"Parse the input log to log template.","input":"initUserPrivacy the userPrivacy switch is open, start push user data!","output":"initUserPrivacy the userPrivacy switch is open, start push user data!"},{"instruction":"Parse the input log to log template.","input":"saveStatData() type =40003,time = 1513958400000,statClient = 2,who is 1","output":"saveStatData() type =<*>,time = <*>,statClient = <*>,who is <*>"},{"instruction":"Parse the input log to log template.","input":"startTimer start autoSync","output":"startTimer start autoSync"},{"instruction":"Parse the input log to log template.","input":"stepSyncOrNot appSynTimes is 0","output":"stepSyncOrNot appSynTimes is <*>"},{"instruction":"Parse the input log to log template.","input":"stepSyncOrNot appSynTimes is 0, statsyncTimes is 0","output":"stepSyncOrNot appSynTimes is <*>, statsyncTimes is <*>"},{"instruction":"Parse the input log to log template.","input":" getTodayBasicStandardSteps= 1514044800223##3786##0","output":"getTodayBasicStandardSteps= <*>##<*>##<*>"},{"instruction":"Parse the input log to log template.","input":" getDiffTotalSteps= 1513958400215##0","output":"getDiffTotalSteps= <*>##<*>"},{"instruction":"Parse the input log to log template.","input":"checkFirstSyncByType no such data in db ,type is 1 deviceCode is 0","output":"checkFirstSyncByType no such data in db ,type is <*> deviceCode is <*>"},{"instruction":"Parse the input log to log template.","input":"startInsertSportSync start auto sync,app is 1","output":"startInsertSportSync start auto sync,app is <*>"},{"instruction":"Parse the input log to log template.","input":"startInsertSportSync first 500 steps sync,do all sync","output":"startInsertSportSync first <*> steps sync,do all sync"},{"instruction":"Parse the input log to log template.","input":"checkInsertStatus stepStatSum or calorieStatSum is enough","output":"checkInsertStatus stepStatSum or calorieStatSum is enough"},{"instruction":"Parse the input log to log template.","input":"insertHiHealthData() end totalTime = 94","output":"insertHiHealthData() end totalTime = <*>"},{"instruction":"Parse the input log to log template.","input":"startListenerChange subscribeList = [1]","output":"startListenerChange subscribeList = [<*>]"},{"instruction":"Parse the input log to log template.","input":"bulkSaveDetailHiHealthData() size = 20,totalTime = 34","output":"bulkSaveDetailHiHealthData() size = <*>,totalTime = <*>"},{"instruction":"Parse the input log to log template.","input":"saveHealthDetailData() saveOneDetailData fail hiHealthData = 1513958400000,type = 40003","output":"saveHealthDetailData() saveOneDetailData fail hiHealthData = <*>,type = <*>"},{"instruction":"Parse the input log to log template.","input":"saveHealthDetailData() deviceID = 2,clientID=1,id=1","output":"saveHealthDetailData() deviceID = <*>,clientID=<*>,id=<*>"},{"instruction":"Parse the input log to log template.","input":"insertHiHealthData() size = 4,app = 1,One Data Type = 40002,packageName = com.huawei.health,writeStatType = 0","output":"insertHiHealthData() size = <*>,app = <*>,One Data Type = <*>,packageName = <*>,writeStatType = <*>"},{"instruction":"Parse the input log to log template.","input":"insertHiHealthData() checkAppType  0 appID = 1","output":"insertHiHealthData() checkAppType <*> appID = <*>"},{"instruction":"Parse the input log to log template.","input":"checkInsertStatus stepSum or calorieSum is enough","output":"checkInsertStatus stepSum or calorieSum is enough"},{"instruction":"Parse the input log to log template.","input":"getAppContext() isAppValid health or wear, packageName = com.huawei.health","output":"getAppContext() isAppValid health or wear, packageName = <*>"},{"instruction":"Parse the input log to log template.","input":"setBasicStandardSteps basicStandardStep=3786 restartSteps=0","output":"setBasicStandardSteps basicStandardStep=<*> restartSteps=<*>"},{"instruction":"Parse the input log to log template.","input":"registersensorsuccess: true","output":"registersensorsuccess: <*>"},{"instruction":"Parse the input log to log template.","input":"clear()","output":"clear()"},{"instruction":"Parse the input log to log template.","input":"screen status unknown,think screen on","output":"screen status unknown,think screen on"},{"instruction":"Parse the input log to log template.","input":"tryToRecordAsBasicStepData bWrite true","output":"tryToRecordAsBasicStepData bWrite <*>"},{"instruction":"Parse the input log to log template.","input":"isScreenOn true","output":"isScreenOn <*>"}]